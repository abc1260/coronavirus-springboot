Create CoronaVirus Rest Controller
----------------------------------------------------------------------------------------------
@RestController
@RestController
public class CornaVirusController implements CoronaVirusService {
	private Logger log = LoggerFactory.getLogger(CornaVirusController.class);

	@Autowired
	private CoronaVirusProcessing coronaVirusProcessing;

	public CornaVirusController(CoronaVirusProcessing process) {
		this.coronaVirusProcessing = process;

		if (coronaVirusProcessing != null) {
			log.info("Calling darocessing processing");
			coronaVirusProcessing.process();
		}
	}

	@GetMapping(value = "/dateLoaded")
	public String getDateLoaded() {
		return coronaVirusProcessing.getDateLoaded();
	}

	@GetMapping(value = "/coronaVirusRegionsMap")
	public Map<String, List<CoronaVirus>> getCoronaVirusRegionsMap() {
		return coronaVirusProcessing.getCoronaVirusRegionsMap();
	}

	@GetMapping(value = "/regionKeys")
	public Set<String> getRegionKeys() {
		return coronaVirusProcessing.getRegionKeys();
	}

	@GetMapping(value = "/coronaVirusList")
	public List<CoronaVirus> getCoronaVirusList() {
		return coronaVirusProcessing.getCoronaVirusList();
	}

	@GetMapping(value = "/coronaVirusByRegion")
	public List<CoronaVirus> getCoronaVirusByRegion(@RequestParam("region") String region) {
		return coronaVirusProcessing.getCoronaVirusByRegion(region);
	}

}


** Explained
------------------
Autowire the CoronaVirusProcessing object: 
	@Autowired
	private CoronaVirusProcessing coronaVirusProcessing;


Add dependency Injection of the CoronaVirusProcessing via constructor.
If we have CoronaVirusProcessing do processing of getting the data.
	public CornaVirusController(CoronaVirusProcessing process) {
		this.coronaVirusProcessing = process;

		if (coronaVirusProcessing != null) {
			log.info("Calling darocessing processing");
			coronaVirusProcessing.process();
		}
	}

Create the endpoint to get the date loaded for the CoranaVirus
	@GetMapping(value = "/dateLoaded")
	public String getDateLoaded() {
		return coronaVirusProcessing.getDateLoaded();
	}

Create the endpoint
	@GetMapping(value = "/coronaVirusRegionsMap")
	public Map<String, List<CoronaVirus>> getCoronaVirusRegionsMap() {
		return coronaVirusProcessing.getCoronaVirusRegionsMap();
	}

Create the endpoint the CoranaVirus regions - states
	@GetMapping(value = "/regions")
	public Set<String> getRegionKeys() {
		return coronaVirusProcessing.getRegionKeys();
	}

Create the endpoint the list of coronaVirus
	@GetMapping(value = "/coronaVirusList")
	public List<CoronaVirus> getCoronaVirusList() {
		return coronaVirusProcessing.getCoronaVirusList();
	}

Create the endpoint to get CoronaVirus by region
	@GetMapping(value = "/coronaVirusByRegion")
	public List<CoronaVirus> getCoronaVirusByRegion(@RequestParam("region") String region) {
		return coronaVirusProcessing.getCoronaVirusByRegion(region);
	}

