Create A CoronaVirus Data Exception Class
File: src/main/com/aikiinc/coronavirus/data/CoronaVirusDataException.java
--------------------------------------------------------------------------------
package com.aikiinc.coronavirus.data;

public class CoronaVirusDataException extends Exception {
	private static final long serialVersionUID = 6287801226203998237L;

	public CoronaVirusDataException(String message) {
		super(message);
	}

	public CoronaVirusDataException(Throwable cause) {
		super(cause);
	}

	public CoronaVirusDataException() {
	}

}


* Explained
---------------------
A traditional exception class.



Use CoronaVirusDataException In The CoronaVirusLocalData.java
--------------------------------------------------------------------------------
public class CoronaVirusLocalData {
	private Logger log = LoggerFactory.getLogger(CoronaVirusLocalData.class);
	private static final String CORONAVIRUS_DATA = "coronavirus.data";
	private URL localUrl = CoronaVirusLocalData.class.getClassLoader().getResource(CORONAVIRUS_DATA);

	Optional<Iterable<CSVRecord>> readLocaData() throws CoronaVirusDataException {
		log.info("Read local data from: " + localUrl);
		Optional<Iterable<CSVRecord>> records = Optional.empty();

		BufferedReader br = null;
		try {
			br = new BufferedReader(new InputStreamReader(localUrl.openStream()));

			// Get the iterable records
			Iterable<CSVRecord> trecords = CSVFormat.DEFAULT.withFirstRecordAsHeader().withIgnoreEmptyLines().parse(br);
			records = Optional.of(trecords);
		} catch (Exception e) {
			log.warn("Local data was NOT read from: " + localUrl);
			throw new CoronaVirusDataException(e);
		} finally {
			try {
				if (br != null)
					br.close();
			} catch (IOException e) {
			}
		}

		return records;
	}

}


Use CoronaVirusDataException In The CoronaVirusLocalDataTest.java
--------------------------------------------------------------------------------
public class CoronaVirusLocalDataTest {
	private static Logger LOG = LoggerFactory.getLogger(CoronaVirusLocalDataTest.class);

	@Test
	public void readLocaData() {
		try {
			Optional<Iterable<CSVRecord>> records = new CoronaVirusLocalData().readLocaData();
			if (records.isPresent()) {
				Assert.assertTrue(records.get().iterator().hasNext());
				
//				try {
//					records.get().forEach(e -> System.out.println(e));
//				} catch (Exception e) {
//				}
			} else
				Assert.fail("No CSVRecord was read");
		} catch (CoronaVirusDataException e) {
			Assert.fail(e.getMessage());
		}
	}

}


Rerun test and should be as before.

